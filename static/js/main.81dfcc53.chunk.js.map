{"version":3,"sources":["Forms.js","App.js","index.js"],"names":["Forms","props","ulabels","id","uuidv4","text","value","state","data","randomize","params","map","a","sort","Math","random","b","index","event","this","slice","target","setState","hardmode","hardtext","key","className","aria-labelledby","p","Fragment","htmlFor","type","undefined","onChange","handleInputChange","bind","disabled","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAIqBA,G,wDAGjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAHVC,QAAU,GAKN,EAAKA,QAAU,CACX,CAACC,GAAGC,cAAUC,KAAK,IAAKC,MAAM,IAC9B,CAACH,GAAGC,cAAUC,KAAK,IAAKC,MAAM,IAC9B,CAACH,GAAGC,cAAUC,KAAK,IAAKC,MAAM,IAC9B,CAACH,GAAGC,cAAUC,KAAK,IAAKC,MAAM,IAC9B,CAACH,GAAGC,cAAUC,KAAK,IAAKC,MAAM,KAClC,EAAKC,MAAQ,CAACC,KAAM,EAAKC,UAAU,EAAKP,UATzB,E,sDAYTQ,GACN,OAAOA,EACFC,KAAI,SAACC,GAAD,MAAQ,CAACC,KAAMC,KAAKC,SAAUT,MAAOM,MACzCC,MAAK,SAACD,EAAGI,GAAJ,OAAUJ,EAAEC,KAAOG,EAAEH,QAC1BF,KAAI,SAACC,GAAD,OAAOA,EAAEN,W,wCAGJW,EAAOC,GACrB,IAAIV,EAAOW,KAAKZ,MAAMC,KAAKY,QAC3BZ,EAAKS,GAAOX,MAAQY,EAAMG,OAAOf,MACjCa,KAAKG,SAAS,CAACd,W,+BAGT,IAAD,OACDe,EAAWJ,KAAKlB,MAAMsB,SACtBC,EAAWD,EAAW,OAAO,OAC7BE,EAAM,EACV,OACI,sBAAKC,UAAU,YAAYC,kBAAiBH,EAA5C,UACA,sBAAKE,UAAU,eAAgBC,kBAAiBH,EAAS,QAAzD,UACI,+BAAKA,EAAL,WACA,iCACA,qBAAKE,UAAU,iBAAf,SACKP,KAAKZ,MAAMC,KAAKG,KAAI,SAACiB,EAAEX,GAAH,OACjBM,EACO,cAAC,IAAMM,SAAP,UAA4B,qCAAGD,EAAEvB,KAAK,2BAAjBoB,KACrB,cAAC,IAAMI,SAAP,UAA4B,wBAAOC,QAASF,EAAEzB,GAAlB,UAAuByB,EAAEvB,KAAK,2BAArCoB,UAGpC,qBAAKC,UAAU,kBAAf,SACKP,KAAKZ,MAAMC,KAAKG,KAAI,SAACiB,EAAEX,GAAH,OACjB,eAAC,IAAMY,SAAP,WAA4B,uBAAOE,KAAK,OAAO5B,GAAKoB,OAAWS,EAAYJ,EAAEzB,GAAK8B,SAAU,EAAKC,kBAAkBC,KAAK,EAAMlB,GAAQX,MAAOsB,EAAEtB,QAAQ,yBAAlImB,gBAKjC,sBAAKC,UAAU,eAAiBC,kBAAiBH,EAAS,SAA1D,UACQ,+BAAKA,EAAL,YACJ,qBAAKE,UAAU,iBAAf,SACKP,KAAKZ,MAAMC,KAAKG,KAAI,SAACiB,EAAEX,GAAH,OACjBM,EACO,cAAC,IAAMM,SAAP,UAA4B,qCAAGD,EAAEvB,KAAK,2BAAjBoB,KACrB,cAAC,IAAMI,SAAP,UAA4B,wBAAOC,QAASF,EAAEzB,GAAG,IAArB,UAA2ByB,EAAEvB,KAAK,2BAAzCoB,UAGpC,qBAAKC,UAAU,kBAAf,SACKP,KAAKZ,MAAMC,KAAKG,KAAI,SAACiB,EAAEX,GAAH,OACjB,eAAC,IAAMY,SAAP,WAA4B,uBAAOE,KAAK,OAAO5B,GAAKoB,OAAWS,EAAYJ,EAAEzB,GAAG,IAAMG,MAAOsB,EAAEvB,KAAKuB,EAAEtB,MAAO8B,SAAS,aAAY,yBAA7GX,oB,GA9DVY,cCQpBC,MAVf,WACE,OACE,qCACE,cAAC,EAAD,CAAOf,UAAU,IACjB,uBACA,cAAC,EAAD,CAAOA,UAAU,QCHvBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.81dfcc53.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Forms.css';\r\n\r\nexport default class Forms extends Component {\r\n    ulabels = []\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.ulabels = [\r\n            {id:uuidv4(), text:\"a\", value:\"\"},\r\n            {id:uuidv4(), text:\"b\", value:\"\"},\r\n            {id:uuidv4(), text:\"c\", value:\"\"},\r\n            {id:uuidv4(), text:\"d\", value:\"\"},\r\n            {id:uuidv4(), text:\"e\", value:\"\"}];\r\n        this.state = {data: this.randomize(this.ulabels)}\r\n    }\r\n\r\n    randomize(params) {\r\n        return params\r\n            .map((a) => ({sort: Math.random(), value: a}))\r\n            .sort((a, b) => a.sort - b.sort)\r\n            .map((a) => a.value)\r\n    }\r\n\r\n    handleInputChange(index, event) {\r\n        var data = this.state.data.slice(); // Make a copy of the values first.\r\n        data[index].value = event.target.value; // Update it with the modified value.\r\n        this.setState({data}); // Update the state.\r\n    }\r\n\r\n    render() {\r\n        let hardmode = this.props.hardmode\r\n        let hardtext = hardmode ? \"hard\":\"easy\"\r\n        let key = 0;\r\n        return (\r\n            <div className=\"SplitPane\" aria-labelledby={hardtext}>\r\n            <div className=\"SplitPane-50\"  aria-labelledby={hardtext+\"input\"}>\r\n                <h4>{hardtext}input</h4>\r\n                <form>\r\n                <div className=\"SplitPane-left\">\r\n                    {this.state.data.map((p,index) => (\r\n                        hardmode \r\n                            ? (<React.Fragment key={key++}><>{p.text}<br/></></React.Fragment>)\r\n                            : (<React.Fragment key={key++}><label htmlFor={p.id}>{p.text}<br/></label></React.Fragment>)                \r\n                    ))}\r\n                </div> \r\n                <div className=\"SplitPane-right\">\r\n                    {this.state.data.map((p,index) => (\r\n                        <React.Fragment key={key++}><input type=\"text\" id={(hardmode ? undefined : p.id)} onChange={this.handleInputChange.bind(this, index)} value={p.value}/><br/></React.Fragment>                       \r\n                    ))}\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"SplitPane-50\"   aria-labelledby={hardtext+\"output\"}>    \r\n                    <h4>{hardtext}output</h4>\r\n                <div className=\"SplitPane-left\">\r\n                    {this.state.data.map((p,index) => (\r\n                        hardmode \r\n                            ? (<React.Fragment key={key++}><>{p.text}<br/></></React.Fragment>)\r\n                            : (<React.Fragment key={key++}><label htmlFor={p.id+\"v\"}>{p.text}<br/></label></React.Fragment>)                \r\n                    ))}                    \r\n                </div> \r\n                <div className=\"SplitPane-right\">\r\n                    {this.state.data.map((p,index) => (\r\n                        <React.Fragment key={key++}><input type=\"text\" id={(hardmode ? undefined : p.id+\"v\")} value={p.text+p.value} disabled=\"disabled\"/><br/></React.Fragment>                                    \r\n                    ))}                    \r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Forms from './Forms';\n\nfunction App() {\n  return (\n    <>\n      <Forms hardmode={false} />\n      <br/>\n      <Forms hardmode={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}